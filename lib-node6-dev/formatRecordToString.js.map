{"version":3,"sources":["../src/formatRecordToString.js"],"names":["formatRecordToString","record","style","options","parts","displayName","push","key","datetime","toTimeString","split","message","symbol","level","styles","forEach","stringObject","join"],"mappings":";;;;;kBAIwBA,oB;;AAJxB;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,oBAAT,CAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,OAA7C,EAAsD;AACnE,MAAIC,UAAJ;;AAEA,MAAIH,OAAOI,WAAX,EAAwB;AACtBD,UAAME,IAAN,CAAWJ,sBAAsBD,OAAOI,WAA7B,CAAX;AACD,GAFD,MAEO,IAAIJ,OAAOM,GAAX,EAAgB;AACrBH,UAAME,IAAN,CAAWJ,sBAAsBD,OAAOM,GAA7B,CAAX;AACD;;AAED,MAAIN,OAAOO,QAAX,EAAqB;AACnBJ,UAAME,IAAN,CAAWJ,wBAAwBD,OAAOO,QAAP,CAAgBC,YAAhB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAxB,CAAX;AACI;AACL;;AAED,MAAIC,UAAUV,OAAOW,MAAP,IAAiB,wBAAcX,OAAOY,KAArB,CAA/B;AACA,MAAIC,SAASb,OAAOa,MAAP,IAAiB,wBAAcb,OAAOY,KAArB,CAA9B;;AAEA,MAAIZ,OAAOU,OAAX,EAAoB;AAClB,QAAIA,OAAJ,EAAa;AACXA,iBAAY,KAAGV,OAAOU,OAAQ,GAA9B;AACD,KAFD,MAEO;AACLA,gBAAUV,OAAOU,OAAjB;AACD;AACF;;AAED,MAAIA,OAAJ,EAAa;AACX,QAAIG,MAAJ,EAAY;AACVH,gBAAUT,MAAMY,MAAN,EAAcH,OAAd,CAAV;AACD;AACDP,UAAME,IAAN,CAAWK,OAAX;AACD;;AAED,mCAAiCI,OAAjC,CAAyCR,OAAO;AAC9C,QAAI,CAACN,OAAOM,GAAP,CAAL,EAAkB;AAChB;AACD;;AAED,UAAMS,eAAe,4BAAaf,OAAOM,GAAP,CAAb,EAA0BL,KAA1B,EAAiCD,OAAQ,IAAEM,GAAI,SAAd,CAAjC,CAArB;;AAEA,QAAI,CAACS,YAAL,EAAmB;AACjB;AACD;;AAEDZ,UAAME,IAAN,CAAWU,YAAX;AACD,GAZD;;AAcA,SAAOZ,MAAMa,IAAN,CAAW,GAAX,CAAP;AACD","file":"formatRecordToString.js","sourcesContent":["import levelToSymbol from './levelToSymbol';\nimport levelToStyles from './levelToStyles';\nimport formatObject from './formatObject';\n\nexport default function formatRecordToString(record, style, options) {\n  let parts = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]));\n        /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message = record.symbol || levelToSymbol[record.level];\n  let styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  ['metadata', 'extra', 'context'].forEach(key => {\n    if (!record[key]) {\n      return;\n    }\n\n    const stringObject = formatObject(record[key], style, record[`${key}Styles`]);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  });\n\n  return parts.join(' ');\n}\n"]}