{"version":3,"sources":["../src/formatObject.js"],"names":["formatObject","tryStringify","arg","JSON","stringify","_","internalFormatValue","value","styleFn","styles","padding","depth","maxDepth","objects","typeofValue","stringValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","message","formattedValue","separator","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","breakLine","formattedSeparator","valuesMaxIndex","length","map","key","index","formattedKey","indexOf","replace","v","fv","join","object","has","keys","add","result","delete","array","Set"],"mappings":"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","file":"formatObject.js","sourcesContent":["/* eslint-disable no-use-before-define, max-lines */\n\nfunction tryStringify(arg) {\n  try {\n    return JSON.stringify(arg);\n  } catch (_) {\n    return '[Circular]';\n  }\n}\n\nfunction internalFormatValue(value, styleFn, styles, { padding, depth, maxDepth, objects }) {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'date':\n          styles = ['magenta'];\n          break;\n      }\n    }\n  }\n\n  let stringValue;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    stringValue = value.toString();\n  } else if (value.constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{object...}';\n    } else {\n      return internalFormatObject(\n        value,\n        styleFn,\n        undefined,\n        { padding, depth: depth + 1, maxDepth, objects },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[array...]';\n    } else {\n      return internalFormatArray(value, styleFn, { padding, depth: depth + 1, maxDepth, objects });\n    }\n  } else if (value instanceof Error) {\n    stringValue = value.stack || value.message || '';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatIterator = (\n  values,\n  styleFn,\n  objectStyles,\n  { padding, depth, maxDepth, objects },\n  { prefix, suffix, prefixSuffixSpace = ' ' },\n) => {\n  let breakLine = false;\n  const formattedSeparator = () => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  values = values.map(({ key, value }, index) => {\n    let nextDepth = depth + 1;\n\n    // key must be formatted before value (browser-formatter needs order)\n    const formattedKey = key ? `${styleFn(['gray-light', 'bold'], `${key}:`)} ` : '';\n\n    let { stringValue, formattedValue } = internalFormatValue(\n      value,\n      styleFn,\n      key && objectStyles && objectStyles[key],\n      { padding, depth: nextDepth, maxDepth, objects },\n    );\n\n    if (stringValue && (stringValue.length > 80 || stringValue.indexOf('\\n') !== -1)) {\n      breakLine = true;\n      stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n      formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n    }\n\n    return {\n      stringValue: stringValue + (index === valuesMaxIndex ? '' : separator),\n      // eslint-disable-next-line no-useless-concat\n      formattedValue: formattedKey + formattedValue + (index === valuesMaxIndex ? '' : formattedSeparator()),\n      // note: we need to format the separator for each values for browser-formatter\n    };\n  });\n\n  return {\n    stringValue: prefix + values\n      .map(breakLine ? v => `\\n${padding}${v.stringValue}` : fv => fv.stringValue)\n      .join(breakLine ? '\\n' : ' ')\n      + suffix,\n    // eslint-disable-next-line prefer-template\n    formattedValue: `${prefix}${breakLine ? '' : prefixSuffixSpace}`\n      + values.map(breakLine ? v => `\\n${padding}${v.formattedValue}` : v => v.formattedValue)\n        .join(breakLine ? '' : ' ')\n      + `${breakLine ? ',\\n' : prefixSuffixSpace}${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object,\n  styleFn,\n  objectStyles,\n  { padding, depth, maxDepth, objects },\n) {\n  if (objects.has(object)) {\n    return { stringValue: '{Circular object}', formattedValue: '{Circular object}' };\n  }\n\n  const keys = Object.keys(object);\n  if (keys.length === 0) {\n    return {\n      stringValue: '{}',\n      formattedValue: '{}',\n    };\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n        keys.map(key => ({ key, value: object[key] })),\n        styleFn,\n        objectStyles,\n        { padding, depth, maxDepth, objects },\n        { prefix: '{', suffix: '}' },\n    );\n\n  objects.delete(object);\n\n  return result;\n}\n\n\nfunction internalFormatArray(array, styleFn, { padding, depth, maxDepth, objects }) {\n  if (objects.has(array)) {\n    return { stringValue: '{Circular array}', formattedValue: '{Circular array}' };\n  }\n\n  if (array.length === 0) {\n    return {\n      stringValue: '[]',\n      formattedValue: '[]',\n    };\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map(value => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: '[', suffix: ']', prefixSuffixSpace: '' },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nexport default function formatObject(object, styleFn, objectStyles, {\n    padding = '  ',\n    maxDepth = 10,\n} = {}) {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    { padding, maxDepth, depth: 0, objects: new Set() },\n  );\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n"]}